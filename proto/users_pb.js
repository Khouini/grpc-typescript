// source: users.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.users.CancellationPolicy', null, global);
goog.exportSymbol('proto.users.Rate', null, global);
goog.exportSymbol('proto.users.Room', null, global);
goog.exportSymbol('proto.users.User', null, global);
goog.exportSymbol('proto.users.UsersList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.users.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.User.repeatedFields_, null);
};
goog.inherits(proto.users.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.users.User.displayName = 'proto.users.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.users.Room = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.Room.repeatedFields_, null);
};
goog.inherits(proto.users.Room, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.users.Room.displayName = 'proto.users.Room';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.users.Rate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.Rate.repeatedFields_, null);
};
goog.inherits(proto.users.Rate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.users.Rate.displayName = 'proto.users.Rate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.users.CancellationPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.users.CancellationPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.users.CancellationPolicy.displayName = 'proto.users.CancellationPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.users.UsersList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.UsersList.repeatedFields_, null);
};
goog.inherits(proto.users.UsersList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.users.UsersList.displayName = 'proto.users.UsersList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.users.User.repeatedFields_ = [18,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.users.User.prototype.toObject = function(opt_includeInstance) {
  return proto.users.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.users.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    supplierId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hotelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    giataId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rating: jspb.Message.getFieldWithDefault(msg, 5, 0),
    address: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hotelChainId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    category: jspb.Message.getFieldWithDefault(msg, 8, ""),
    city: jspb.Message.getFieldWithDefault(msg, 9, ""),
    cityId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    zone: jspb.Message.getFieldWithDefault(msg, 11, ""),
    zoneId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    country: jspb.Message.getFieldWithDefault(msg, 13, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 14, ""),
    latitude: jspb.Message.getFieldWithDefault(msg, 15, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 16, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 17, ""),
    photosList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    minRate: jspb.Message.getFieldWithDefault(msg, 20, 0),
    maxRate: jspb.Message.getFieldWithDefault(msg, 21, 0),
    roomsList: jspb.Message.toObjectList(msg.getRoomsList(),
    proto.users.Room.toObject, includeInstance),
    searchCode: jspb.Message.getFieldWithDefault(msg, 23, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.users.User}
 */
proto.users.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.users.User;
  return proto.users.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.users.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.users.User}
 */
proto.users.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSupplierId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGiataId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelChainId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCityId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLatitude(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhotos(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinRate(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxRate(value);
      break;
    case 22:
      var value = new proto.users.Room;
      reader.readMessage(value,proto.users.Room.deserializeBinaryFromReader);
      msg.addRooms(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.users.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.users.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.users.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSupplierId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHotelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGiataId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHotelChainId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCityId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getZoneId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLatitude();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getPhotosList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = message.getMinRate();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getMaxRate();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getRoomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.users.Room.serializeBinaryToWriter
    );
  }
  f = message.getSearchCode();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
};


/**
 * optional int32 supplier_id = 1;
 * @return {number}
 */
proto.users.User.prototype.getSupplierId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setSupplierId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string hotel_id = 2;
 * @return {string}
 */
proto.users.User.prototype.getHotelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setHotelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 giata_id = 3;
 * @return {number}
 */
proto.users.User.prototype.getGiataId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setGiataId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.users.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 rating = 5;
 * @return {number}
 */
proto.users.User.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string address = 6;
 * @return {string}
 */
proto.users.User.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string hotel_chain_id = 7;
 * @return {string}
 */
proto.users.User.prototype.getHotelChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setHotelChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string category = 8;
 * @return {string}
 */
proto.users.User.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string city = 9;
 * @return {string}
 */
proto.users.User.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 city_id = 10;
 * @return {number}
 */
proto.users.User.prototype.getCityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setCityId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string zone = 11;
 * @return {string}
 */
proto.users.User.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string zone_id = 12;
 * @return {string}
 */
proto.users.User.prototype.getZoneId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setZoneId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string country = 13;
 * @return {string}
 */
proto.users.User.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string country_code = 14;
 * @return {string}
 */
proto.users.User.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string latitude = 15;
 * @return {string}
 */
proto.users.User.prototype.getLatitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string longitude = 16;
 * @return {string}
 */
proto.users.User.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string currency = 17;
 * @return {string}
 */
proto.users.User.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated string photos = 18;
 * @return {!Array<string>}
 */
proto.users.User.prototype.getPhotosList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setPhotosList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.addPhotos = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional float score = 19;
 * @return {number}
 */
proto.users.User.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional int32 min_rate = 20;
 * @return {number}
 */
proto.users.User.prototype.getMinRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setMinRate = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 max_rate = 21;
 * @return {number}
 */
proto.users.User.prototype.getMaxRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setMaxRate = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * repeated Room rooms = 22;
 * @return {!Array<!proto.users.Room>}
 */
proto.users.User.prototype.getRoomsList = function() {
  return /** @type{!Array<!proto.users.Room>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.users.Room, 22));
};


/**
 * @param {!Array<!proto.users.Room>} value
 * @return {!proto.users.User} returns this
*/
proto.users.User.prototype.setRoomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.users.Room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.users.Room}
 */
proto.users.User.prototype.addRooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.users.Room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.clearRoomsList = function() {
  return this.setRoomsList([]);
};


/**
 * optional string search_code = 23;
 * @return {string}
 */
proto.users.User.prototype.getSearchCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.User} returns this
 */
proto.users.User.prototype.setSearchCode = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.users.Room.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.users.Room.prototype.toObject = function(opt_includeInstance) {
  return proto.users.Room.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.users.Room} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.Room.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ratesList: jspb.Message.toObjectList(msg.getRatesList(),
    proto.users.Rate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.users.Room}
 */
proto.users.Room.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.users.Room;
  return proto.users.Room.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.users.Room} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.users.Room}
 */
proto.users.Room.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.users.Rate;
      reader.readMessage(value,proto.users.Rate.deserializeBinaryFromReader);
      msg.addRates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.users.Room.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.users.Room.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.users.Room} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.Room.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.users.Rate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.users.Room.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Room} returns this
 */
proto.users.Room.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.users.Room.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Room} returns this
 */
proto.users.Room.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Rate rates = 3;
 * @return {!Array<!proto.users.Rate>}
 */
proto.users.Room.prototype.getRatesList = function() {
  return /** @type{!Array<!proto.users.Rate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.users.Rate, 3));
};


/**
 * @param {!Array<!proto.users.Rate>} value
 * @return {!proto.users.Room} returns this
*/
proto.users.Room.prototype.setRatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.users.Rate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.users.Rate}
 */
proto.users.Room.prototype.addRates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.users.Rate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.Room} returns this
 */
proto.users.Room.prototype.clearRatesList = function() {
  return this.setRatesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.users.Rate.repeatedFields_ = [8,9,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.users.Rate.prototype.toObject = function(opt_includeInstance) {
  return proto.users.Rate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.users.Rate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.Rate.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    allotment: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rooms: jspb.Message.getFieldWithDefault(msg, 3, 0),
    boardName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    boardCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nrf: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    amount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    cancellationPoliciesList: jspb.Message.toObjectList(msg.getCancellationPoliciesList(),
    proto.users.CancellationPolicy.toObject, includeInstance),
    offersList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    promotionsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    taxesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    adults: jspb.Message.getFieldWithDefault(msg, 12, ""),
    infant: jspb.Message.getFieldWithDefault(msg, 13, ""),
    children: jspb.Message.getFieldWithDefault(msg, 14, ""),
    childrenAges: jspb.Message.getFieldWithDefault(msg, 15, ""),
    rateKey: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.users.Rate}
 */
proto.users.Rate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.users.Rate;
  return proto.users.Rate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.users.Rate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.users.Rate}
 */
proto.users.Rate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAllotment(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRooms(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardCode(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNrf(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 8:
      var value = new proto.users.CancellationPolicy;
      reader.readMessage(value,proto.users.CancellationPolicy.deserializeBinaryFromReader);
      msg.addCancellationPolicies(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addOffers(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addPromotions(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addTaxes(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdults(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfant(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setChildren(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setChildrenAges(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRateKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.users.Rate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.users.Rate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.users.Rate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.Rate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAllotment();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRooms();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBoardName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBoardCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNrf();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCancellationPoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.users.CancellationPolicy.serializeBinaryToWriter
    );
  }
  f = message.getOffersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPromotionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getTaxesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getAdults();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getInfant();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getChildren();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getChildrenAges();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRateKey();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string payment_type = 1;
 * @return {string}
 */
proto.users.Rate.prototype.getPaymentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setPaymentType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 allotment = 2;
 * @return {number}
 */
proto.users.Rate.prototype.getAllotment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setAllotment = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rooms = 3;
 * @return {number}
 */
proto.users.Rate.prototype.getRooms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setRooms = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string board_name = 4;
 * @return {string}
 */
proto.users.Rate.prototype.getBoardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setBoardName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string board_code = 5;
 * @return {string}
 */
proto.users.Rate.prototype.getBoardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setBoardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool nrf = 6;
 * @return {boolean}
 */
proto.users.Rate.prototype.getNrf = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setNrf = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 amount = 7;
 * @return {number}
 */
proto.users.Rate.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated CancellationPolicy cancellation_policies = 8;
 * @return {!Array<!proto.users.CancellationPolicy>}
 */
proto.users.Rate.prototype.getCancellationPoliciesList = function() {
  return /** @type{!Array<!proto.users.CancellationPolicy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.users.CancellationPolicy, 8));
};


/**
 * @param {!Array<!proto.users.CancellationPolicy>} value
 * @return {!proto.users.Rate} returns this
*/
proto.users.Rate.prototype.setCancellationPoliciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.users.CancellationPolicy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.users.CancellationPolicy}
 */
proto.users.Rate.prototype.addCancellationPolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.users.CancellationPolicy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.clearCancellationPoliciesList = function() {
  return this.setCancellationPoliciesList([]);
};


/**
 * repeated string offers = 9;
 * @return {!Array<string>}
 */
proto.users.Rate.prototype.getOffersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setOffersList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.addOffers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.clearOffersList = function() {
  return this.setOffersList([]);
};


/**
 * repeated string promotions = 10;
 * @return {!Array<string>}
 */
proto.users.Rate.prototype.getPromotionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setPromotionsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.addPromotions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.clearPromotionsList = function() {
  return this.setPromotionsList([]);
};


/**
 * repeated string taxes = 11;
 * @return {!Array<string>}
 */
proto.users.Rate.prototype.getTaxesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setTaxesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.addTaxes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.clearTaxesList = function() {
  return this.setTaxesList([]);
};


/**
 * optional string adults = 12;
 * @return {string}
 */
proto.users.Rate.prototype.getAdults = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setAdults = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string infant = 13;
 * @return {string}
 */
proto.users.Rate.prototype.getInfant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setInfant = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string children = 14;
 * @return {string}
 */
proto.users.Rate.prototype.getChildren = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setChildren = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string children_ages = 15;
 * @return {string}
 */
proto.users.Rate.prototype.getChildrenAges = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setChildrenAges = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string rate_key = 16;
 * @return {string}
 */
proto.users.Rate.prototype.getRateKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.Rate} returns this
 */
proto.users.Rate.prototype.setRateKey = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.users.CancellationPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.users.CancellationPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.users.CancellationPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.CancellationPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.users.CancellationPolicy}
 */
proto.users.CancellationPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.users.CancellationPolicy;
  return proto.users.CancellationPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.users.CancellationPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.users.CancellationPolicy}
 */
proto.users.CancellationPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.users.CancellationPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.users.CancellationPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.users.CancellationPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.CancellationPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string from = 1;
 * @return {string}
 */
proto.users.CancellationPolicy.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.users.CancellationPolicy} returns this
 */
proto.users.CancellationPolicy.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 amount = 2;
 * @return {number}
 */
proto.users.CancellationPolicy.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.users.CancellationPolicy} returns this
 */
proto.users.CancellationPolicy.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.users.UsersList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.users.UsersList.prototype.toObject = function(opt_includeInstance) {
  return proto.users.UsersList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.users.UsersList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.UsersList.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.users.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.users.UsersList}
 */
proto.users.UsersList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.users.UsersList;
  return proto.users.UsersList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.users.UsersList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.users.UsersList}
 */
proto.users.UsersList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.users.User;
      reader.readMessage(value,proto.users.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.users.UsersList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.users.UsersList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.users.UsersList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.users.UsersList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.users.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.users.User>}
 */
proto.users.UsersList.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.users.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.users.User, 1));
};


/**
 * @param {!Array<!proto.users.User>} value
 * @return {!proto.users.UsersList} returns this
*/
proto.users.UsersList.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.users.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.users.User}
 */
proto.users.UsersList.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.users.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.users.UsersList} returns this
 */
proto.users.UsersList.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


goog.object.extend(exports, proto.users);
